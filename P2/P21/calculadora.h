/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _CALCULADORA_H_RPCGEN
#define _CALCULADORA_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif


struct div_res {
	int errno;
	union {
		int res;
	} div_res_u;
};
typedef struct div_res div_res;

struct suma_1_argument {
	int a;
	int b;
};
typedef struct suma_1_argument suma_1_argument;

struct resta_1_argument {
	int a;
	int b;
};
typedef struct resta_1_argument resta_1_argument;

struct multi_1_argument {
	int a;
	int b;
};
typedef struct multi_1_argument multi_1_argument;

struct div_1_argument {
	int a;
	int b;
};
typedef struct div_1_argument div_1_argument;

#define CALCULADORA 0x20000001
#define CALCULADORA_V 1

#if defined(__STDC__) || defined(__cplusplus)
#define SUMA 1
extern  int * suma_1(int , int , CLIENT *);
extern  int * suma_1_svc(int , int , struct svc_req *);
#define RESTA 2
extern  int * resta_1(int , int , CLIENT *);
extern  int * resta_1_svc(int , int , struct svc_req *);
#define MULTI 3
extern  int * multi_1(int , int , CLIENT *);
extern  int * multi_1_svc(int , int , struct svc_req *);
#define DIV 4
extern  div_res * div_1(int , int , CLIENT *);
extern  div_res * div_1_svc(int , int , struct svc_req *);
extern int calculadora_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define SUMA 1
extern  int * suma_1();
extern  int * suma_1_svc();
#define RESTA 2
extern  int * resta_1();
extern  int * resta_1_svc();
#define MULTI 3
extern  int * multi_1();
extern  int * multi_1_svc();
#define DIV 4
extern  div_res * div_1();
extern  div_res * div_1_svc();
extern int calculadora_1_freeresult ();
#endif /* K&R C */

#define CALCULADORA_COMPLEJA 0x20000002
#define CALCULADORA_CV 1

#if defined(__STDC__) || defined(__cplusplus)
#define SUMA_V 1
extern  char ** suma_v_1(char *, CLIENT *);
extern  char ** suma_v_1_svc(char *, struct svc_req *);
#define DETERM 2
extern  char ** determ_1(char *, CLIENT *);
extern  char ** determ_1_svc(char *, struct svc_req *);
extern int calculadora_compleja_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define SUMA_V 1
extern  char ** suma_v_1();
extern  char ** suma_v_1_svc();
#define DETERM 2
extern  char ** determ_1();
extern  char ** determ_1_svc();
extern int calculadora_compleja_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_div_res (XDR *, div_res*);
extern  bool_t xdr_suma_1_argument (XDR *, suma_1_argument*);
extern  bool_t xdr_resta_1_argument (XDR *, resta_1_argument*);
extern  bool_t xdr_multi_1_argument (XDR *, multi_1_argument*);
extern  bool_t xdr_div_1_argument (XDR *, div_1_argument*);

#else /* K&R C */
extern bool_t xdr_div_res ();
extern bool_t xdr_suma_1_argument ();
extern bool_t xdr_resta_1_argument ();
extern bool_t xdr_multi_1_argument ();
extern bool_t xdr_div_1_argument ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_CALCULADORA_H_RPCGEN */
